/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.subur.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Subject service. Represents a row in the &quot;subur_Subject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.idetronic.subur.model.impl.SubjectModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.idetronic.subur.model.impl.SubjectImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see Subject
 * @see com.idetronic.subur.model.impl.SubjectImpl
 * @see com.idetronic.subur.model.impl.SubjectModelImpl
 * @generated
 */
public interface SubjectModel extends BaseModel<Subject> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a subject model instance should use the {@link Subject} interface instead.
	 */

	/**
	 * Returns the primary key of this subject.
	 *
	 * @return the primary key of this subject
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this subject.
	 *
	 * @param primaryKey the primary key of this subject
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the subject ID of this subject.
	 *
	 * @return the subject ID of this subject
	 */
	public long getSubjectId();

	/**
	 * Sets the subject ID of this subject.
	 *
	 * @param subjectId the subject ID of this subject
	 */
	public void setSubjectId(long subjectId);

	/**
	 * Returns the parent ID of this subject.
	 *
	 * @return the parent ID of this subject
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this subject.
	 *
	 * @param parentId the parent ID of this subject
	 */
	public void setParentId(long parentId);

	/**
	 * Returns the subject name of this subject.
	 *
	 * @return the subject name of this subject
	 */
	@AutoEscape
	public String getSubjectName();

	/**
	 * Sets the subject name of this subject.
	 *
	 * @param subjectName the subject name of this subject
	 */
	public void setSubjectName(String subjectName);

	/**
	 * Returns the lft of this subject.
	 *
	 * @return the lft of this subject
	 */
	public int getLft();

	/**
	 * Sets the lft of this subject.
	 *
	 * @param lft the lft of this subject
	 */
	public void setLft(int lft);

	/**
	 * Returns the rgt of this subject.
	 *
	 * @return the rgt of this subject
	 */
	public int getRgt();

	/**
	 * Sets the rgt of this subject.
	 *
	 * @param rgt the rgt of this subject
	 */
	public void setRgt(int rgt);

	/**
	 * Returns the depositable of this subject.
	 *
	 * @return the depositable of this subject
	 */
	public boolean getDepositable();

	/**
	 * Returns <code>true</code> if this subject is depositable.
	 *
	 * @return <code>true</code> if this subject is depositable; <code>false</code> otherwise
	 */
	public boolean isDepositable();

	/**
	 * Sets whether this subject is depositable.
	 *
	 * @param depositable the depositable of this subject
	 */
	public void setDepositable(boolean depositable);

	/**
	 * Returns the item count of this subject.
	 *
	 * @return the item count of this subject
	 */
	public int getItemCount();

	/**
	 * Sets the item count of this subject.
	 *
	 * @param itemCount the item count of this subject
	 */
	public void setItemCount(int itemCount);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.idetronic.subur.model.Subject subject);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.idetronic.subur.model.Subject> toCacheModel();

	@Override
	public com.idetronic.subur.model.Subject toEscapedModel();

	@Override
	public com.idetronic.subur.model.Subject toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}