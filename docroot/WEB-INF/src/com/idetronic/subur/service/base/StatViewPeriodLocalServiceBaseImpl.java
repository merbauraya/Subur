/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.subur.service.base;

import com.idetronic.subur.model.StatViewPeriod;
import com.idetronic.subur.service.StatViewPeriodLocalService;
import com.idetronic.subur.service.persistence.AuthorExpertisePersistence;
import com.idetronic.subur.service.persistence.AuthorFinder;
import com.idetronic.subur.service.persistence.AuthorPersistence;
import com.idetronic.subur.service.persistence.DownloadSummaryPersistence;
import com.idetronic.subur.service.persistence.ExpertiseFinder;
import com.idetronic.subur.service.persistence.ExpertisePersistence;
import com.idetronic.subur.service.persistence.ItemAuthorPersistence;
import com.idetronic.subur.service.persistence.ItemFileEntryPersistence;
import com.idetronic.subur.service.persistence.ItemItemTypeFinder;
import com.idetronic.subur.service.persistence.ItemItemTypePersistence;
import com.idetronic.subur.service.persistence.ItemTypePersistence;
import com.idetronic.subur.service.persistence.ItemTypeTemplatePersistence;
import com.idetronic.subur.service.persistence.MetadataPropertyPersistence;
import com.idetronic.subur.service.persistence.MetadataPropertyValueFinder;
import com.idetronic.subur.service.persistence.MetadataPropertyValuePersistence;
import com.idetronic.subur.service.persistence.MetadataSchemaPersistence;
import com.idetronic.subur.service.persistence.StatDownloadCategoryPersistence;
import com.idetronic.subur.service.persistence.StatDownloadItemTypePersistence;
import com.idetronic.subur.service.persistence.StatDownloadPeriodPersistence;
import com.idetronic.subur.service.persistence.StatDownloadTagPersistence;
import com.idetronic.subur.service.persistence.StatViewCategoryPersistence;
import com.idetronic.subur.service.persistence.StatViewItemTypePersistence;
import com.idetronic.subur.service.persistence.StatViewPeriodPersistence;
import com.idetronic.subur.service.persistence.StatViewTagPersistence;
import com.idetronic.subur.service.persistence.SuburItemFinder;
import com.idetronic.subur.service.persistence.SuburItemPersistence;
import com.idetronic.subur.service.persistence.ViewSummaryPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the stat view period local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.idetronic.subur.service.impl.StatViewPeriodLocalServiceImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see com.idetronic.subur.service.impl.StatViewPeriodLocalServiceImpl
 * @see com.idetronic.subur.service.StatViewPeriodLocalServiceUtil
 * @generated
 */
public abstract class StatViewPeriodLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements StatViewPeriodLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.idetronic.subur.service.StatViewPeriodLocalServiceUtil} to access the stat view period local service.
	 */

	/**
	 * Adds the stat view period to the database. Also notifies the appropriate model listeners.
	 *
	 * @param statViewPeriod the stat view period
	 * @return the stat view period that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public StatViewPeriod addStatViewPeriod(StatViewPeriod statViewPeriod)
		throws SystemException {
		statViewPeriod.setNew(true);

		return statViewPeriodPersistence.update(statViewPeriod);
	}

	/**
	 * Creates a new stat view period with the primary key. Does not add the stat view period to the database.
	 *
	 * @param id the primary key for the new stat view period
	 * @return the new stat view period
	 */
	@Override
	public StatViewPeriod createStatViewPeriod(long id) {
		return statViewPeriodPersistence.create(id);
	}

	/**
	 * Deletes the stat view period with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the stat view period
	 * @return the stat view period that was removed
	 * @throws PortalException if a stat view period with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public StatViewPeriod deleteStatViewPeriod(long id)
		throws PortalException, SystemException {
		return statViewPeriodPersistence.remove(id);
	}

	/**
	 * Deletes the stat view period from the database. Also notifies the appropriate model listeners.
	 *
	 * @param statViewPeriod the stat view period
	 * @return the stat view period that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public StatViewPeriod deleteStatViewPeriod(StatViewPeriod statViewPeriod)
		throws SystemException {
		return statViewPeriodPersistence.remove(statViewPeriod);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(StatViewPeriod.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return statViewPeriodPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.subur.model.impl.StatViewPeriodModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return statViewPeriodPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.subur.model.impl.StatViewPeriodModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return statViewPeriodPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return statViewPeriodPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return statViewPeriodPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public StatViewPeriod fetchStatViewPeriod(long id)
		throws SystemException {
		return statViewPeriodPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the stat view period with the primary key.
	 *
	 * @param id the primary key of the stat view period
	 * @return the stat view period
	 * @throws PortalException if a stat view period with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public StatViewPeriod getStatViewPeriod(long id)
		throws PortalException, SystemException {
		return statViewPeriodPersistence.findByPrimaryKey(id);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return statViewPeriodPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the stat view periods.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.subur.model.impl.StatViewPeriodModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of stat view periods
	 * @param end the upper bound of the range of stat view periods (not inclusive)
	 * @return the range of stat view periods
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<StatViewPeriod> getStatViewPeriods(int start, int end)
		throws SystemException {
		return statViewPeriodPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of stat view periods.
	 *
	 * @return the number of stat view periods
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getStatViewPeriodsCount() throws SystemException {
		return statViewPeriodPersistence.countAll();
	}

	/**
	 * Updates the stat view period in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param statViewPeriod the stat view period
	 * @return the stat view period that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public StatViewPeriod updateStatViewPeriod(StatViewPeriod statViewPeriod)
		throws SystemException {
		return statViewPeriodPersistence.update(statViewPeriod);
	}

	/**
	 * Returns the author local service.
	 *
	 * @return the author local service
	 */
	public com.idetronic.subur.service.AuthorLocalService getAuthorLocalService() {
		return authorLocalService;
	}

	/**
	 * Sets the author local service.
	 *
	 * @param authorLocalService the author local service
	 */
	public void setAuthorLocalService(
		com.idetronic.subur.service.AuthorLocalService authorLocalService) {
		this.authorLocalService = authorLocalService;
	}

	/**
	 * Returns the author persistence.
	 *
	 * @return the author persistence
	 */
	public AuthorPersistence getAuthorPersistence() {
		return authorPersistence;
	}

	/**
	 * Sets the author persistence.
	 *
	 * @param authorPersistence the author persistence
	 */
	public void setAuthorPersistence(AuthorPersistence authorPersistence) {
		this.authorPersistence = authorPersistence;
	}

	/**
	 * Returns the author finder.
	 *
	 * @return the author finder
	 */
	public AuthorFinder getAuthorFinder() {
		return authorFinder;
	}

	/**
	 * Sets the author finder.
	 *
	 * @param authorFinder the author finder
	 */
	public void setAuthorFinder(AuthorFinder authorFinder) {
		this.authorFinder = authorFinder;
	}

	/**
	 * Returns the author expertise local service.
	 *
	 * @return the author expertise local service
	 */
	public com.idetronic.subur.service.AuthorExpertiseLocalService getAuthorExpertiseLocalService() {
		return authorExpertiseLocalService;
	}

	/**
	 * Sets the author expertise local service.
	 *
	 * @param authorExpertiseLocalService the author expertise local service
	 */
	public void setAuthorExpertiseLocalService(
		com.idetronic.subur.service.AuthorExpertiseLocalService authorExpertiseLocalService) {
		this.authorExpertiseLocalService = authorExpertiseLocalService;
	}

	/**
	 * Returns the author expertise persistence.
	 *
	 * @return the author expertise persistence
	 */
	public AuthorExpertisePersistence getAuthorExpertisePersistence() {
		return authorExpertisePersistence;
	}

	/**
	 * Sets the author expertise persistence.
	 *
	 * @param authorExpertisePersistence the author expertise persistence
	 */
	public void setAuthorExpertisePersistence(
		AuthorExpertisePersistence authorExpertisePersistence) {
		this.authorExpertisePersistence = authorExpertisePersistence;
	}

	/**
	 * Returns the download summary local service.
	 *
	 * @return the download summary local service
	 */
	public com.idetronic.subur.service.DownloadSummaryLocalService getDownloadSummaryLocalService() {
		return downloadSummaryLocalService;
	}

	/**
	 * Sets the download summary local service.
	 *
	 * @param downloadSummaryLocalService the download summary local service
	 */
	public void setDownloadSummaryLocalService(
		com.idetronic.subur.service.DownloadSummaryLocalService downloadSummaryLocalService) {
		this.downloadSummaryLocalService = downloadSummaryLocalService;
	}

	/**
	 * Returns the download summary persistence.
	 *
	 * @return the download summary persistence
	 */
	public DownloadSummaryPersistence getDownloadSummaryPersistence() {
		return downloadSummaryPersistence;
	}

	/**
	 * Sets the download summary persistence.
	 *
	 * @param downloadSummaryPersistence the download summary persistence
	 */
	public void setDownloadSummaryPersistence(
		DownloadSummaryPersistence downloadSummaryPersistence) {
		this.downloadSummaryPersistence = downloadSummaryPersistence;
	}

	/**
	 * Returns the expertise local service.
	 *
	 * @return the expertise local service
	 */
	public com.idetronic.subur.service.ExpertiseLocalService getExpertiseLocalService() {
		return expertiseLocalService;
	}

	/**
	 * Sets the expertise local service.
	 *
	 * @param expertiseLocalService the expertise local service
	 */
	public void setExpertiseLocalService(
		com.idetronic.subur.service.ExpertiseLocalService expertiseLocalService) {
		this.expertiseLocalService = expertiseLocalService;
	}

	/**
	 * Returns the expertise remote service.
	 *
	 * @return the expertise remote service
	 */
	public com.idetronic.subur.service.ExpertiseService getExpertiseService() {
		return expertiseService;
	}

	/**
	 * Sets the expertise remote service.
	 *
	 * @param expertiseService the expertise remote service
	 */
	public void setExpertiseService(
		com.idetronic.subur.service.ExpertiseService expertiseService) {
		this.expertiseService = expertiseService;
	}

	/**
	 * Returns the expertise persistence.
	 *
	 * @return the expertise persistence
	 */
	public ExpertisePersistence getExpertisePersistence() {
		return expertisePersistence;
	}

	/**
	 * Sets the expertise persistence.
	 *
	 * @param expertisePersistence the expertise persistence
	 */
	public void setExpertisePersistence(
		ExpertisePersistence expertisePersistence) {
		this.expertisePersistence = expertisePersistence;
	}

	/**
	 * Returns the expertise finder.
	 *
	 * @return the expertise finder
	 */
	public ExpertiseFinder getExpertiseFinder() {
		return expertiseFinder;
	}

	/**
	 * Sets the expertise finder.
	 *
	 * @param expertiseFinder the expertise finder
	 */
	public void setExpertiseFinder(ExpertiseFinder expertiseFinder) {
		this.expertiseFinder = expertiseFinder;
	}

	/**
	 * Returns the item author local service.
	 *
	 * @return the item author local service
	 */
	public com.idetronic.subur.service.ItemAuthorLocalService getItemAuthorLocalService() {
		return itemAuthorLocalService;
	}

	/**
	 * Sets the item author local service.
	 *
	 * @param itemAuthorLocalService the item author local service
	 */
	public void setItemAuthorLocalService(
		com.idetronic.subur.service.ItemAuthorLocalService itemAuthorLocalService) {
		this.itemAuthorLocalService = itemAuthorLocalService;
	}

	/**
	 * Returns the item author persistence.
	 *
	 * @return the item author persistence
	 */
	public ItemAuthorPersistence getItemAuthorPersistence() {
		return itemAuthorPersistence;
	}

	/**
	 * Sets the item author persistence.
	 *
	 * @param itemAuthorPersistence the item author persistence
	 */
	public void setItemAuthorPersistence(
		ItemAuthorPersistence itemAuthorPersistence) {
		this.itemAuthorPersistence = itemAuthorPersistence;
	}

	/**
	 * Returns the item file entry local service.
	 *
	 * @return the item file entry local service
	 */
	public com.idetronic.subur.service.ItemFileEntryLocalService getItemFileEntryLocalService() {
		return itemFileEntryLocalService;
	}

	/**
	 * Sets the item file entry local service.
	 *
	 * @param itemFileEntryLocalService the item file entry local service
	 */
	public void setItemFileEntryLocalService(
		com.idetronic.subur.service.ItemFileEntryLocalService itemFileEntryLocalService) {
		this.itemFileEntryLocalService = itemFileEntryLocalService;
	}

	/**
	 * Returns the item file entry remote service.
	 *
	 * @return the item file entry remote service
	 */
	public com.idetronic.subur.service.ItemFileEntryService getItemFileEntryService() {
		return itemFileEntryService;
	}

	/**
	 * Sets the item file entry remote service.
	 *
	 * @param itemFileEntryService the item file entry remote service
	 */
	public void setItemFileEntryService(
		com.idetronic.subur.service.ItemFileEntryService itemFileEntryService) {
		this.itemFileEntryService = itemFileEntryService;
	}

	/**
	 * Returns the item file entry persistence.
	 *
	 * @return the item file entry persistence
	 */
	public ItemFileEntryPersistence getItemFileEntryPersistence() {
		return itemFileEntryPersistence;
	}

	/**
	 * Sets the item file entry persistence.
	 *
	 * @param itemFileEntryPersistence the item file entry persistence
	 */
	public void setItemFileEntryPersistence(
		ItemFileEntryPersistence itemFileEntryPersistence) {
		this.itemFileEntryPersistence = itemFileEntryPersistence;
	}

	/**
	 * Returns the item item type local service.
	 *
	 * @return the item item type local service
	 */
	public com.idetronic.subur.service.ItemItemTypeLocalService getItemItemTypeLocalService() {
		return itemItemTypeLocalService;
	}

	/**
	 * Sets the item item type local service.
	 *
	 * @param itemItemTypeLocalService the item item type local service
	 */
	public void setItemItemTypeLocalService(
		com.idetronic.subur.service.ItemItemTypeLocalService itemItemTypeLocalService) {
		this.itemItemTypeLocalService = itemItemTypeLocalService;
	}

	/**
	 * Returns the item item type persistence.
	 *
	 * @return the item item type persistence
	 */
	public ItemItemTypePersistence getItemItemTypePersistence() {
		return itemItemTypePersistence;
	}

	/**
	 * Sets the item item type persistence.
	 *
	 * @param itemItemTypePersistence the item item type persistence
	 */
	public void setItemItemTypePersistence(
		ItemItemTypePersistence itemItemTypePersistence) {
		this.itemItemTypePersistence = itemItemTypePersistence;
	}

	/**
	 * Returns the item item type finder.
	 *
	 * @return the item item type finder
	 */
	public ItemItemTypeFinder getItemItemTypeFinder() {
		return itemItemTypeFinder;
	}

	/**
	 * Sets the item item type finder.
	 *
	 * @param itemItemTypeFinder the item item type finder
	 */
	public void setItemItemTypeFinder(ItemItemTypeFinder itemItemTypeFinder) {
		this.itemItemTypeFinder = itemItemTypeFinder;
	}

	/**
	 * Returns the item type local service.
	 *
	 * @return the item type local service
	 */
	public com.idetronic.subur.service.ItemTypeLocalService getItemTypeLocalService() {
		return itemTypeLocalService;
	}

	/**
	 * Sets the item type local service.
	 *
	 * @param itemTypeLocalService the item type local service
	 */
	public void setItemTypeLocalService(
		com.idetronic.subur.service.ItemTypeLocalService itemTypeLocalService) {
		this.itemTypeLocalService = itemTypeLocalService;
	}

	/**
	 * Returns the item type persistence.
	 *
	 * @return the item type persistence
	 */
	public ItemTypePersistence getItemTypePersistence() {
		return itemTypePersistence;
	}

	/**
	 * Sets the item type persistence.
	 *
	 * @param itemTypePersistence the item type persistence
	 */
	public void setItemTypePersistence(ItemTypePersistence itemTypePersistence) {
		this.itemTypePersistence = itemTypePersistence;
	}

	/**
	 * Returns the item type template local service.
	 *
	 * @return the item type template local service
	 */
	public com.idetronic.subur.service.ItemTypeTemplateLocalService getItemTypeTemplateLocalService() {
		return itemTypeTemplateLocalService;
	}

	/**
	 * Sets the item type template local service.
	 *
	 * @param itemTypeTemplateLocalService the item type template local service
	 */
	public void setItemTypeTemplateLocalService(
		com.idetronic.subur.service.ItemTypeTemplateLocalService itemTypeTemplateLocalService) {
		this.itemTypeTemplateLocalService = itemTypeTemplateLocalService;
	}

	/**
	 * Returns the item type template persistence.
	 *
	 * @return the item type template persistence
	 */
	public ItemTypeTemplatePersistence getItemTypeTemplatePersistence() {
		return itemTypeTemplatePersistence;
	}

	/**
	 * Sets the item type template persistence.
	 *
	 * @param itemTypeTemplatePersistence the item type template persistence
	 */
	public void setItemTypeTemplatePersistence(
		ItemTypeTemplatePersistence itemTypeTemplatePersistence) {
		this.itemTypeTemplatePersistence = itemTypeTemplatePersistence;
	}

	/**
	 * Returns the metadata property local service.
	 *
	 * @return the metadata property local service
	 */
	public com.idetronic.subur.service.MetadataPropertyLocalService getMetadataPropertyLocalService() {
		return metadataPropertyLocalService;
	}

	/**
	 * Sets the metadata property local service.
	 *
	 * @param metadataPropertyLocalService the metadata property local service
	 */
	public void setMetadataPropertyLocalService(
		com.idetronic.subur.service.MetadataPropertyLocalService metadataPropertyLocalService) {
		this.metadataPropertyLocalService = metadataPropertyLocalService;
	}

	/**
	 * Returns the metadata property persistence.
	 *
	 * @return the metadata property persistence
	 */
	public MetadataPropertyPersistence getMetadataPropertyPersistence() {
		return metadataPropertyPersistence;
	}

	/**
	 * Sets the metadata property persistence.
	 *
	 * @param metadataPropertyPersistence the metadata property persistence
	 */
	public void setMetadataPropertyPersistence(
		MetadataPropertyPersistence metadataPropertyPersistence) {
		this.metadataPropertyPersistence = metadataPropertyPersistence;
	}

	/**
	 * Returns the metadata property value local service.
	 *
	 * @return the metadata property value local service
	 */
	public com.idetronic.subur.service.MetadataPropertyValueLocalService getMetadataPropertyValueLocalService() {
		return metadataPropertyValueLocalService;
	}

	/**
	 * Sets the metadata property value local service.
	 *
	 * @param metadataPropertyValueLocalService the metadata property value local service
	 */
	public void setMetadataPropertyValueLocalService(
		com.idetronic.subur.service.MetadataPropertyValueLocalService metadataPropertyValueLocalService) {
		this.metadataPropertyValueLocalService = metadataPropertyValueLocalService;
	}

	/**
	 * Returns the metadata property value persistence.
	 *
	 * @return the metadata property value persistence
	 */
	public MetadataPropertyValuePersistence getMetadataPropertyValuePersistence() {
		return metadataPropertyValuePersistence;
	}

	/**
	 * Sets the metadata property value persistence.
	 *
	 * @param metadataPropertyValuePersistence the metadata property value persistence
	 */
	public void setMetadataPropertyValuePersistence(
		MetadataPropertyValuePersistence metadataPropertyValuePersistence) {
		this.metadataPropertyValuePersistence = metadataPropertyValuePersistence;
	}

	/**
	 * Returns the metadata property value finder.
	 *
	 * @return the metadata property value finder
	 */
	public MetadataPropertyValueFinder getMetadataPropertyValueFinder() {
		return metadataPropertyValueFinder;
	}

	/**
	 * Sets the metadata property value finder.
	 *
	 * @param metadataPropertyValueFinder the metadata property value finder
	 */
	public void setMetadataPropertyValueFinder(
		MetadataPropertyValueFinder metadataPropertyValueFinder) {
		this.metadataPropertyValueFinder = metadataPropertyValueFinder;
	}

	/**
	 * Returns the metadata schema local service.
	 *
	 * @return the metadata schema local service
	 */
	public com.idetronic.subur.service.MetadataSchemaLocalService getMetadataSchemaLocalService() {
		return metadataSchemaLocalService;
	}

	/**
	 * Sets the metadata schema local service.
	 *
	 * @param metadataSchemaLocalService the metadata schema local service
	 */
	public void setMetadataSchemaLocalService(
		com.idetronic.subur.service.MetadataSchemaLocalService metadataSchemaLocalService) {
		this.metadataSchemaLocalService = metadataSchemaLocalService;
	}

	/**
	 * Returns the metadata schema persistence.
	 *
	 * @return the metadata schema persistence
	 */
	public MetadataSchemaPersistence getMetadataSchemaPersistence() {
		return metadataSchemaPersistence;
	}

	/**
	 * Sets the metadata schema persistence.
	 *
	 * @param metadataSchemaPersistence the metadata schema persistence
	 */
	public void setMetadataSchemaPersistence(
		MetadataSchemaPersistence metadataSchemaPersistence) {
		this.metadataSchemaPersistence = metadataSchemaPersistence;
	}

	/**
	 * Returns the stat download category local service.
	 *
	 * @return the stat download category local service
	 */
	public com.idetronic.subur.service.StatDownloadCategoryLocalService getStatDownloadCategoryLocalService() {
		return statDownloadCategoryLocalService;
	}

	/**
	 * Sets the stat download category local service.
	 *
	 * @param statDownloadCategoryLocalService the stat download category local service
	 */
	public void setStatDownloadCategoryLocalService(
		com.idetronic.subur.service.StatDownloadCategoryLocalService statDownloadCategoryLocalService) {
		this.statDownloadCategoryLocalService = statDownloadCategoryLocalService;
	}

	/**
	 * Returns the stat download category persistence.
	 *
	 * @return the stat download category persistence
	 */
	public StatDownloadCategoryPersistence getStatDownloadCategoryPersistence() {
		return statDownloadCategoryPersistence;
	}

	/**
	 * Sets the stat download category persistence.
	 *
	 * @param statDownloadCategoryPersistence the stat download category persistence
	 */
	public void setStatDownloadCategoryPersistence(
		StatDownloadCategoryPersistence statDownloadCategoryPersistence) {
		this.statDownloadCategoryPersistence = statDownloadCategoryPersistence;
	}

	/**
	 * Returns the stat download item type local service.
	 *
	 * @return the stat download item type local service
	 */
	public com.idetronic.subur.service.StatDownloadItemTypeLocalService getStatDownloadItemTypeLocalService() {
		return statDownloadItemTypeLocalService;
	}

	/**
	 * Sets the stat download item type local service.
	 *
	 * @param statDownloadItemTypeLocalService the stat download item type local service
	 */
	public void setStatDownloadItemTypeLocalService(
		com.idetronic.subur.service.StatDownloadItemTypeLocalService statDownloadItemTypeLocalService) {
		this.statDownloadItemTypeLocalService = statDownloadItemTypeLocalService;
	}

	/**
	 * Returns the stat download item type persistence.
	 *
	 * @return the stat download item type persistence
	 */
	public StatDownloadItemTypePersistence getStatDownloadItemTypePersistence() {
		return statDownloadItemTypePersistence;
	}

	/**
	 * Sets the stat download item type persistence.
	 *
	 * @param statDownloadItemTypePersistence the stat download item type persistence
	 */
	public void setStatDownloadItemTypePersistence(
		StatDownloadItemTypePersistence statDownloadItemTypePersistence) {
		this.statDownloadItemTypePersistence = statDownloadItemTypePersistence;
	}

	/**
	 * Returns the stat download period local service.
	 *
	 * @return the stat download period local service
	 */
	public com.idetronic.subur.service.StatDownloadPeriodLocalService getStatDownloadPeriodLocalService() {
		return statDownloadPeriodLocalService;
	}

	/**
	 * Sets the stat download period local service.
	 *
	 * @param statDownloadPeriodLocalService the stat download period local service
	 */
	public void setStatDownloadPeriodLocalService(
		com.idetronic.subur.service.StatDownloadPeriodLocalService statDownloadPeriodLocalService) {
		this.statDownloadPeriodLocalService = statDownloadPeriodLocalService;
	}

	/**
	 * Returns the stat download period persistence.
	 *
	 * @return the stat download period persistence
	 */
	public StatDownloadPeriodPersistence getStatDownloadPeriodPersistence() {
		return statDownloadPeriodPersistence;
	}

	/**
	 * Sets the stat download period persistence.
	 *
	 * @param statDownloadPeriodPersistence the stat download period persistence
	 */
	public void setStatDownloadPeriodPersistence(
		StatDownloadPeriodPersistence statDownloadPeriodPersistence) {
		this.statDownloadPeriodPersistence = statDownloadPeriodPersistence;
	}

	/**
	 * Returns the stat download tag local service.
	 *
	 * @return the stat download tag local service
	 */
	public com.idetronic.subur.service.StatDownloadTagLocalService getStatDownloadTagLocalService() {
		return statDownloadTagLocalService;
	}

	/**
	 * Sets the stat download tag local service.
	 *
	 * @param statDownloadTagLocalService the stat download tag local service
	 */
	public void setStatDownloadTagLocalService(
		com.idetronic.subur.service.StatDownloadTagLocalService statDownloadTagLocalService) {
		this.statDownloadTagLocalService = statDownloadTagLocalService;
	}

	/**
	 * Returns the stat download tag persistence.
	 *
	 * @return the stat download tag persistence
	 */
	public StatDownloadTagPersistence getStatDownloadTagPersistence() {
		return statDownloadTagPersistence;
	}

	/**
	 * Sets the stat download tag persistence.
	 *
	 * @param statDownloadTagPersistence the stat download tag persistence
	 */
	public void setStatDownloadTagPersistence(
		StatDownloadTagPersistence statDownloadTagPersistence) {
		this.statDownloadTagPersistence = statDownloadTagPersistence;
	}

	/**
	 * Returns the stat view category local service.
	 *
	 * @return the stat view category local service
	 */
	public com.idetronic.subur.service.StatViewCategoryLocalService getStatViewCategoryLocalService() {
		return statViewCategoryLocalService;
	}

	/**
	 * Sets the stat view category local service.
	 *
	 * @param statViewCategoryLocalService the stat view category local service
	 */
	public void setStatViewCategoryLocalService(
		com.idetronic.subur.service.StatViewCategoryLocalService statViewCategoryLocalService) {
		this.statViewCategoryLocalService = statViewCategoryLocalService;
	}

	/**
	 * Returns the stat view category persistence.
	 *
	 * @return the stat view category persistence
	 */
	public StatViewCategoryPersistence getStatViewCategoryPersistence() {
		return statViewCategoryPersistence;
	}

	/**
	 * Sets the stat view category persistence.
	 *
	 * @param statViewCategoryPersistence the stat view category persistence
	 */
	public void setStatViewCategoryPersistence(
		StatViewCategoryPersistence statViewCategoryPersistence) {
		this.statViewCategoryPersistence = statViewCategoryPersistence;
	}

	/**
	 * Returns the stat view item type local service.
	 *
	 * @return the stat view item type local service
	 */
	public com.idetronic.subur.service.StatViewItemTypeLocalService getStatViewItemTypeLocalService() {
		return statViewItemTypeLocalService;
	}

	/**
	 * Sets the stat view item type local service.
	 *
	 * @param statViewItemTypeLocalService the stat view item type local service
	 */
	public void setStatViewItemTypeLocalService(
		com.idetronic.subur.service.StatViewItemTypeLocalService statViewItemTypeLocalService) {
		this.statViewItemTypeLocalService = statViewItemTypeLocalService;
	}

	/**
	 * Returns the stat view item type persistence.
	 *
	 * @return the stat view item type persistence
	 */
	public StatViewItemTypePersistence getStatViewItemTypePersistence() {
		return statViewItemTypePersistence;
	}

	/**
	 * Sets the stat view item type persistence.
	 *
	 * @param statViewItemTypePersistence the stat view item type persistence
	 */
	public void setStatViewItemTypePersistence(
		StatViewItemTypePersistence statViewItemTypePersistence) {
		this.statViewItemTypePersistence = statViewItemTypePersistence;
	}

	/**
	 * Returns the stat view period local service.
	 *
	 * @return the stat view period local service
	 */
	public com.idetronic.subur.service.StatViewPeriodLocalService getStatViewPeriodLocalService() {
		return statViewPeriodLocalService;
	}

	/**
	 * Sets the stat view period local service.
	 *
	 * @param statViewPeriodLocalService the stat view period local service
	 */
	public void setStatViewPeriodLocalService(
		com.idetronic.subur.service.StatViewPeriodLocalService statViewPeriodLocalService) {
		this.statViewPeriodLocalService = statViewPeriodLocalService;
	}

	/**
	 * Returns the stat view period remote service.
	 *
	 * @return the stat view period remote service
	 */
	public com.idetronic.subur.service.StatViewPeriodService getStatViewPeriodService() {
		return statViewPeriodService;
	}

	/**
	 * Sets the stat view period remote service.
	 *
	 * @param statViewPeriodService the stat view period remote service
	 */
	public void setStatViewPeriodService(
		com.idetronic.subur.service.StatViewPeriodService statViewPeriodService) {
		this.statViewPeriodService = statViewPeriodService;
	}

	/**
	 * Returns the stat view period persistence.
	 *
	 * @return the stat view period persistence
	 */
	public StatViewPeriodPersistence getStatViewPeriodPersistence() {
		return statViewPeriodPersistence;
	}

	/**
	 * Sets the stat view period persistence.
	 *
	 * @param statViewPeriodPersistence the stat view period persistence
	 */
	public void setStatViewPeriodPersistence(
		StatViewPeriodPersistence statViewPeriodPersistence) {
		this.statViewPeriodPersistence = statViewPeriodPersistence;
	}

	/**
	 * Returns the stat view tag local service.
	 *
	 * @return the stat view tag local service
	 */
	public com.idetronic.subur.service.StatViewTagLocalService getStatViewTagLocalService() {
		return statViewTagLocalService;
	}

	/**
	 * Sets the stat view tag local service.
	 *
	 * @param statViewTagLocalService the stat view tag local service
	 */
	public void setStatViewTagLocalService(
		com.idetronic.subur.service.StatViewTagLocalService statViewTagLocalService) {
		this.statViewTagLocalService = statViewTagLocalService;
	}

	/**
	 * Returns the stat view tag persistence.
	 *
	 * @return the stat view tag persistence
	 */
	public StatViewTagPersistence getStatViewTagPersistence() {
		return statViewTagPersistence;
	}

	/**
	 * Sets the stat view tag persistence.
	 *
	 * @param statViewTagPersistence the stat view tag persistence
	 */
	public void setStatViewTagPersistence(
		StatViewTagPersistence statViewTagPersistence) {
		this.statViewTagPersistence = statViewTagPersistence;
	}

	/**
	 * Returns the subur item local service.
	 *
	 * @return the subur item local service
	 */
	public com.idetronic.subur.service.SuburItemLocalService getSuburItemLocalService() {
		return suburItemLocalService;
	}

	/**
	 * Sets the subur item local service.
	 *
	 * @param suburItemLocalService the subur item local service
	 */
	public void setSuburItemLocalService(
		com.idetronic.subur.service.SuburItemLocalService suburItemLocalService) {
		this.suburItemLocalService = suburItemLocalService;
	}

	/**
	 * Returns the subur item persistence.
	 *
	 * @return the subur item persistence
	 */
	public SuburItemPersistence getSuburItemPersistence() {
		return suburItemPersistence;
	}

	/**
	 * Sets the subur item persistence.
	 *
	 * @param suburItemPersistence the subur item persistence
	 */
	public void setSuburItemPersistence(
		SuburItemPersistence suburItemPersistence) {
		this.suburItemPersistence = suburItemPersistence;
	}

	/**
	 * Returns the subur item finder.
	 *
	 * @return the subur item finder
	 */
	public SuburItemFinder getSuburItemFinder() {
		return suburItemFinder;
	}

	/**
	 * Sets the subur item finder.
	 *
	 * @param suburItemFinder the subur item finder
	 */
	public void setSuburItemFinder(SuburItemFinder suburItemFinder) {
		this.suburItemFinder = suburItemFinder;
	}

	/**
	 * Returns the view summary local service.
	 *
	 * @return the view summary local service
	 */
	public com.idetronic.subur.service.ViewSummaryLocalService getViewSummaryLocalService() {
		return viewSummaryLocalService;
	}

	/**
	 * Sets the view summary local service.
	 *
	 * @param viewSummaryLocalService the view summary local service
	 */
	public void setViewSummaryLocalService(
		com.idetronic.subur.service.ViewSummaryLocalService viewSummaryLocalService) {
		this.viewSummaryLocalService = viewSummaryLocalService;
	}

	/**
	 * Returns the view summary persistence.
	 *
	 * @return the view summary persistence
	 */
	public ViewSummaryPersistence getViewSummaryPersistence() {
		return viewSummaryPersistence;
	}

	/**
	 * Sets the view summary persistence.
	 *
	 * @param viewSummaryPersistence the view summary persistence
	 */
	public void setViewSummaryPersistence(
		ViewSummaryPersistence viewSummaryPersistence) {
		this.viewSummaryPersistence = viewSummaryPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.idetronic.subur.model.StatViewPeriod",
			statViewPeriodLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.idetronic.subur.model.StatViewPeriod");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return StatViewPeriod.class;
	}

	protected String getModelClassName() {
		return StatViewPeriod.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = statViewPeriodPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.idetronic.subur.service.AuthorLocalService.class)
	protected com.idetronic.subur.service.AuthorLocalService authorLocalService;
	@BeanReference(type = AuthorPersistence.class)
	protected AuthorPersistence authorPersistence;
	@BeanReference(type = AuthorFinder.class)
	protected AuthorFinder authorFinder;
	@BeanReference(type = com.idetronic.subur.service.AuthorExpertiseLocalService.class)
	protected com.idetronic.subur.service.AuthorExpertiseLocalService authorExpertiseLocalService;
	@BeanReference(type = AuthorExpertisePersistence.class)
	protected AuthorExpertisePersistence authorExpertisePersistence;
	@BeanReference(type = com.idetronic.subur.service.DownloadSummaryLocalService.class)
	protected com.idetronic.subur.service.DownloadSummaryLocalService downloadSummaryLocalService;
	@BeanReference(type = DownloadSummaryPersistence.class)
	protected DownloadSummaryPersistence downloadSummaryPersistence;
	@BeanReference(type = com.idetronic.subur.service.ExpertiseLocalService.class)
	protected com.idetronic.subur.service.ExpertiseLocalService expertiseLocalService;
	@BeanReference(type = com.idetronic.subur.service.ExpertiseService.class)
	protected com.idetronic.subur.service.ExpertiseService expertiseService;
	@BeanReference(type = ExpertisePersistence.class)
	protected ExpertisePersistence expertisePersistence;
	@BeanReference(type = ExpertiseFinder.class)
	protected ExpertiseFinder expertiseFinder;
	@BeanReference(type = com.idetronic.subur.service.ItemAuthorLocalService.class)
	protected com.idetronic.subur.service.ItemAuthorLocalService itemAuthorLocalService;
	@BeanReference(type = ItemAuthorPersistence.class)
	protected ItemAuthorPersistence itemAuthorPersistence;
	@BeanReference(type = com.idetronic.subur.service.ItemFileEntryLocalService.class)
	protected com.idetronic.subur.service.ItemFileEntryLocalService itemFileEntryLocalService;
	@BeanReference(type = com.idetronic.subur.service.ItemFileEntryService.class)
	protected com.idetronic.subur.service.ItemFileEntryService itemFileEntryService;
	@BeanReference(type = ItemFileEntryPersistence.class)
	protected ItemFileEntryPersistence itemFileEntryPersistence;
	@BeanReference(type = com.idetronic.subur.service.ItemItemTypeLocalService.class)
	protected com.idetronic.subur.service.ItemItemTypeLocalService itemItemTypeLocalService;
	@BeanReference(type = ItemItemTypePersistence.class)
	protected ItemItemTypePersistence itemItemTypePersistence;
	@BeanReference(type = ItemItemTypeFinder.class)
	protected ItemItemTypeFinder itemItemTypeFinder;
	@BeanReference(type = com.idetronic.subur.service.ItemTypeLocalService.class)
	protected com.idetronic.subur.service.ItemTypeLocalService itemTypeLocalService;
	@BeanReference(type = ItemTypePersistence.class)
	protected ItemTypePersistence itemTypePersistence;
	@BeanReference(type = com.idetronic.subur.service.ItemTypeTemplateLocalService.class)
	protected com.idetronic.subur.service.ItemTypeTemplateLocalService itemTypeTemplateLocalService;
	@BeanReference(type = ItemTypeTemplatePersistence.class)
	protected ItemTypeTemplatePersistence itemTypeTemplatePersistence;
	@BeanReference(type = com.idetronic.subur.service.MetadataPropertyLocalService.class)
	protected com.idetronic.subur.service.MetadataPropertyLocalService metadataPropertyLocalService;
	@BeanReference(type = MetadataPropertyPersistence.class)
	protected MetadataPropertyPersistence metadataPropertyPersistence;
	@BeanReference(type = com.idetronic.subur.service.MetadataPropertyValueLocalService.class)
	protected com.idetronic.subur.service.MetadataPropertyValueLocalService metadataPropertyValueLocalService;
	@BeanReference(type = MetadataPropertyValuePersistence.class)
	protected MetadataPropertyValuePersistence metadataPropertyValuePersistence;
	@BeanReference(type = MetadataPropertyValueFinder.class)
	protected MetadataPropertyValueFinder metadataPropertyValueFinder;
	@BeanReference(type = com.idetronic.subur.service.MetadataSchemaLocalService.class)
	protected com.idetronic.subur.service.MetadataSchemaLocalService metadataSchemaLocalService;
	@BeanReference(type = MetadataSchemaPersistence.class)
	protected MetadataSchemaPersistence metadataSchemaPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatDownloadCategoryLocalService.class)
	protected com.idetronic.subur.service.StatDownloadCategoryLocalService statDownloadCategoryLocalService;
	@BeanReference(type = StatDownloadCategoryPersistence.class)
	protected StatDownloadCategoryPersistence statDownloadCategoryPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatDownloadItemTypeLocalService.class)
	protected com.idetronic.subur.service.StatDownloadItemTypeLocalService statDownloadItemTypeLocalService;
	@BeanReference(type = StatDownloadItemTypePersistence.class)
	protected StatDownloadItemTypePersistence statDownloadItemTypePersistence;
	@BeanReference(type = com.idetronic.subur.service.StatDownloadPeriodLocalService.class)
	protected com.idetronic.subur.service.StatDownloadPeriodLocalService statDownloadPeriodLocalService;
	@BeanReference(type = StatDownloadPeriodPersistence.class)
	protected StatDownloadPeriodPersistence statDownloadPeriodPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatDownloadTagLocalService.class)
	protected com.idetronic.subur.service.StatDownloadTagLocalService statDownloadTagLocalService;
	@BeanReference(type = StatDownloadTagPersistence.class)
	protected StatDownloadTagPersistence statDownloadTagPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatViewCategoryLocalService.class)
	protected com.idetronic.subur.service.StatViewCategoryLocalService statViewCategoryLocalService;
	@BeanReference(type = StatViewCategoryPersistence.class)
	protected StatViewCategoryPersistence statViewCategoryPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatViewItemTypeLocalService.class)
	protected com.idetronic.subur.service.StatViewItemTypeLocalService statViewItemTypeLocalService;
	@BeanReference(type = StatViewItemTypePersistence.class)
	protected StatViewItemTypePersistence statViewItemTypePersistence;
	@BeanReference(type = com.idetronic.subur.service.StatViewPeriodLocalService.class)
	protected com.idetronic.subur.service.StatViewPeriodLocalService statViewPeriodLocalService;
	@BeanReference(type = com.idetronic.subur.service.StatViewPeriodService.class)
	protected com.idetronic.subur.service.StatViewPeriodService statViewPeriodService;
	@BeanReference(type = StatViewPeriodPersistence.class)
	protected StatViewPeriodPersistence statViewPeriodPersistence;
	@BeanReference(type = com.idetronic.subur.service.StatViewTagLocalService.class)
	protected com.idetronic.subur.service.StatViewTagLocalService statViewTagLocalService;
	@BeanReference(type = StatViewTagPersistence.class)
	protected StatViewTagPersistence statViewTagPersistence;
	@BeanReference(type = com.idetronic.subur.service.SuburItemLocalService.class)
	protected com.idetronic.subur.service.SuburItemLocalService suburItemLocalService;
	@BeanReference(type = SuburItemPersistence.class)
	protected SuburItemPersistence suburItemPersistence;
	@BeanReference(type = SuburItemFinder.class)
	protected SuburItemFinder suburItemFinder;
	@BeanReference(type = com.idetronic.subur.service.ViewSummaryLocalService.class)
	protected com.idetronic.subur.service.ViewSummaryLocalService viewSummaryLocalService;
	@BeanReference(type = ViewSummaryPersistence.class)
	protected ViewSummaryPersistence viewSummaryPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private StatViewPeriodLocalServiceClpInvoker _clpInvoker = new StatViewPeriodLocalServiceClpInvoker();
}