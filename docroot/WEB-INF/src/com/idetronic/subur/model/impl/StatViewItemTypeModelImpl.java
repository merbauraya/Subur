/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.subur.model.impl;

import com.idetronic.subur.model.StatViewItemType;
import com.idetronic.subur.model.StatViewItemTypeModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StatViewItemType service. Represents a row in the &quot;Subur_StatViewItemType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.idetronic.subur.model.StatViewItemTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StatViewItemTypeImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see StatViewItemTypeImpl
 * @see com.idetronic.subur.model.StatViewItemType
 * @see com.idetronic.subur.model.StatViewItemTypeModel
 * @generated
 */
public class StatViewItemTypeModelImpl extends BaseModelImpl<StatViewItemType>
	implements StatViewItemTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a stat view item type model instance should use the {@link com.idetronic.subur.model.StatViewItemType} interface instead.
	 */
	public static final String TABLE_NAME = "Subur_StatViewItemType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "perYear", Types.INTEGER },
			{ "perMonth", Types.INTEGER },
			{ "itemTypeId", Types.BIGINT },
			{ "viewCount", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table Subur_StatViewItemType (id_ LONG not null primary key,companyId LONG,groupId LONG,perYear INTEGER,perMonth INTEGER,itemTypeId LONG,viewCount INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table Subur_StatViewItemType";
	public static final String ORDER_BY_JPQL = " ORDER BY statViewItemType.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Subur_StatViewItemType.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.idetronic.subur.model.StatViewItemType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.idetronic.subur.model.StatViewItemType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.idetronic.subur.model.StatViewItemType"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long ITEMTYPEID_COLUMN_BITMASK = 4L;
	public static long PERMONTH_COLUMN_BITMASK = 8L;
	public static long PERYEAR_COLUMN_BITMASK = 16L;
	public static long ID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.idetronic.subur.model.StatViewItemType"));

	public StatViewItemTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StatViewItemType.class;
	}

	@Override
	public String getModelClassName() {
		return StatViewItemType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("perYear", getPerYear());
		attributes.put("perMonth", getPerMonth());
		attributes.put("itemTypeId", getItemTypeId());
		attributes.put("viewCount", getViewCount());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Integer perYear = (Integer)attributes.get("perYear");

		if (perYear != null) {
			setPerYear(perYear);
		}

		Integer perMonth = (Integer)attributes.get("perMonth");

		if (perMonth != null) {
			setPerMonth(perMonth);
		}

		Long itemTypeId = (Long)attributes.get("itemTypeId");

		if (itemTypeId != null) {
			setItemTypeId(itemTypeId);
		}

		Integer viewCount = (Integer)attributes.get("viewCount");

		if (viewCount != null) {
			setViewCount(viewCount);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public int getPerYear() {
		return _perYear;
	}

	@Override
	public void setPerYear(int perYear) {
		_columnBitmask |= PERYEAR_COLUMN_BITMASK;

		if (!_setOriginalPerYear) {
			_setOriginalPerYear = true;

			_originalPerYear = _perYear;
		}

		_perYear = perYear;
	}

	public int getOriginalPerYear() {
		return _originalPerYear;
	}

	@Override
	public int getPerMonth() {
		return _perMonth;
	}

	@Override
	public void setPerMonth(int perMonth) {
		_columnBitmask |= PERMONTH_COLUMN_BITMASK;

		if (!_setOriginalPerMonth) {
			_setOriginalPerMonth = true;

			_originalPerMonth = _perMonth;
		}

		_perMonth = perMonth;
	}

	public int getOriginalPerMonth() {
		return _originalPerMonth;
	}

	@Override
	public long getItemTypeId() {
		return _itemTypeId;
	}

	@Override
	public void setItemTypeId(long itemTypeId) {
		_columnBitmask |= ITEMTYPEID_COLUMN_BITMASK;

		if (!_setOriginalItemTypeId) {
			_setOriginalItemTypeId = true;

			_originalItemTypeId = _itemTypeId;
		}

		_itemTypeId = itemTypeId;
	}

	public long getOriginalItemTypeId() {
		return _originalItemTypeId;
	}

	@Override
	public int getViewCount() {
		return _viewCount;
	}

	@Override
	public void setViewCount(int viewCount) {
		_viewCount = viewCount;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			StatViewItemType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StatViewItemType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StatViewItemType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StatViewItemTypeImpl statViewItemTypeImpl = new StatViewItemTypeImpl();

		statViewItemTypeImpl.setId(getId());
		statViewItemTypeImpl.setCompanyId(getCompanyId());
		statViewItemTypeImpl.setGroupId(getGroupId());
		statViewItemTypeImpl.setPerYear(getPerYear());
		statViewItemTypeImpl.setPerMonth(getPerMonth());
		statViewItemTypeImpl.setItemTypeId(getItemTypeId());
		statViewItemTypeImpl.setViewCount(getViewCount());

		statViewItemTypeImpl.resetOriginalValues();

		return statViewItemTypeImpl;
	}

	@Override
	public int compareTo(StatViewItemType statViewItemType) {
		long primaryKey = statViewItemType.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StatViewItemType)) {
			return false;
		}

		StatViewItemType statViewItemType = (StatViewItemType)obj;

		long primaryKey = statViewItemType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		StatViewItemTypeModelImpl statViewItemTypeModelImpl = this;

		statViewItemTypeModelImpl._originalCompanyId = statViewItemTypeModelImpl._companyId;

		statViewItemTypeModelImpl._setOriginalCompanyId = false;

		statViewItemTypeModelImpl._originalGroupId = statViewItemTypeModelImpl._groupId;

		statViewItemTypeModelImpl._setOriginalGroupId = false;

		statViewItemTypeModelImpl._originalPerYear = statViewItemTypeModelImpl._perYear;

		statViewItemTypeModelImpl._setOriginalPerYear = false;

		statViewItemTypeModelImpl._originalPerMonth = statViewItemTypeModelImpl._perMonth;

		statViewItemTypeModelImpl._setOriginalPerMonth = false;

		statViewItemTypeModelImpl._originalItemTypeId = statViewItemTypeModelImpl._itemTypeId;

		statViewItemTypeModelImpl._setOriginalItemTypeId = false;

		statViewItemTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StatViewItemType> toCacheModel() {
		StatViewItemTypeCacheModel statViewItemTypeCacheModel = new StatViewItemTypeCacheModel();

		statViewItemTypeCacheModel.id = getId();

		statViewItemTypeCacheModel.companyId = getCompanyId();

		statViewItemTypeCacheModel.groupId = getGroupId();

		statViewItemTypeCacheModel.perYear = getPerYear();

		statViewItemTypeCacheModel.perMonth = getPerMonth();

		statViewItemTypeCacheModel.itemTypeId = getItemTypeId();

		statViewItemTypeCacheModel.viewCount = getViewCount();

		return statViewItemTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", perYear=");
		sb.append(getPerYear());
		sb.append(", perMonth=");
		sb.append(getPerMonth());
		sb.append(", itemTypeId=");
		sb.append(getItemTypeId());
		sb.append(", viewCount=");
		sb.append(getViewCount());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.idetronic.subur.model.StatViewItemType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perYear</column-name><column-value><![CDATA[");
		sb.append(getPerYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perMonth</column-name><column-value><![CDATA[");
		sb.append(getPerMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemTypeId</column-name><column-value><![CDATA[");
		sb.append(getItemTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>viewCount</column-name><column-value><![CDATA[");
		sb.append(getViewCount());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StatViewItemType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StatViewItemType.class
		};
	private long _id;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private int _perYear;
	private int _originalPerYear;
	private boolean _setOriginalPerYear;
	private int _perMonth;
	private int _originalPerMonth;
	private boolean _setOriginalPerMonth;
	private long _itemTypeId;
	private long _originalItemTypeId;
	private boolean _setOriginalItemTypeId;
	private int _viewCount;
	private long _columnBitmask;
	private StatViewItemType _escapedModel;
}