/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.subur.model.impl;

import com.idetronic.subur.model.CopyRequest;
import com.idetronic.subur.model.CopyRequestModel;
import com.idetronic.subur.model.CopyRequestSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CopyRequest service. Represents a row in the &quot;Subur_CopyRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.idetronic.subur.model.CopyRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CopyRequestImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see CopyRequestImpl
 * @see com.idetronic.subur.model.CopyRequest
 * @see com.idetronic.subur.model.CopyRequestModel
 * @generated
 */
@JSON(strict = true)
public class CopyRequestModelImpl extends BaseModelImpl<CopyRequest>
	implements CopyRequestModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a copy request model instance should use the {@link com.idetronic.subur.model.CopyRequest} interface instead.
	 */
	public static final String TABLE_NAME = "Subur_CopyRequest";
	public static final Object[][] TABLE_COLUMNS = {
			{ "copyRequestId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "dateCreated", Types.TIMESTAMP },
			{ "status", Types.INTEGER },
			{ "suburItemId", Types.BIGINT },
			{ "fromEmailAddress", Types.VARCHAR },
			{ "requesterName", Types.VARCHAR },
			{ "reason", Types.VARCHAR },
			{ "organization", Types.VARCHAR },
			{ "dateResponsed", Types.TIMESTAMP },
			{ "respondText", Types.VARCHAR },
			{ "responsedByUserId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Subur_CopyRequest (copyRequestId LONG not null primary key,companyId LONG,groupId LONG,dateCreated DATE null,status INTEGER,suburItemId LONG,fromEmailAddress VARCHAR(75) null,requesterName VARCHAR(75) null,reason STRING null,organization VARCHAR(75) null,dateResponsed DATE null,respondText STRING null,responsedByUserId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Subur_CopyRequest";
	public static final String ORDER_BY_JPQL = " ORDER BY copyRequest.copyRequestId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Subur_CopyRequest.copyRequestId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.idetronic.subur.model.CopyRequest"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.idetronic.subur.model.CopyRequest"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.idetronic.subur.model.CopyRequest"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long STATUS_COLUMN_BITMASK = 4L;
	public static long COPYREQUESTID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CopyRequest toModel(CopyRequestSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CopyRequest model = new CopyRequestImpl();

		model.setCopyRequestId(soapModel.getCopyRequestId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setDateCreated(soapModel.getDateCreated());
		model.setStatus(soapModel.getStatus());
		model.setSuburItemId(soapModel.getSuburItemId());
		model.setFromEmailAddress(soapModel.getFromEmailAddress());
		model.setRequesterName(soapModel.getRequesterName());
		model.setReason(soapModel.getReason());
		model.setOrganization(soapModel.getOrganization());
		model.setDateResponsed(soapModel.getDateResponsed());
		model.setRespondText(soapModel.getRespondText());
		model.setResponsedByUserId(soapModel.getResponsedByUserId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CopyRequest> toModels(CopyRequestSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CopyRequest> models = new ArrayList<CopyRequest>(soapModels.length);

		for (CopyRequestSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.idetronic.subur.model.CopyRequest"));

	public CopyRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _copyRequestId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCopyRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _copyRequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CopyRequest.class;
	}

	@Override
	public String getModelClassName() {
		return CopyRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("copyRequestId", getCopyRequestId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("dateCreated", getDateCreated());
		attributes.put("status", getStatus());
		attributes.put("suburItemId", getSuburItemId());
		attributes.put("fromEmailAddress", getFromEmailAddress());
		attributes.put("requesterName", getRequesterName());
		attributes.put("reason", getReason());
		attributes.put("organization", getOrganization());
		attributes.put("dateResponsed", getDateResponsed());
		attributes.put("respondText", getRespondText());
		attributes.put("responsedByUserId", getResponsedByUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long copyRequestId = (Long)attributes.get("copyRequestId");

		if (copyRequestId != null) {
			setCopyRequestId(copyRequestId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Date dateCreated = (Date)attributes.get("dateCreated");

		if (dateCreated != null) {
			setDateCreated(dateCreated);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long suburItemId = (Long)attributes.get("suburItemId");

		if (suburItemId != null) {
			setSuburItemId(suburItemId);
		}

		String fromEmailAddress = (String)attributes.get("fromEmailAddress");

		if (fromEmailAddress != null) {
			setFromEmailAddress(fromEmailAddress);
		}

		String requesterName = (String)attributes.get("requesterName");

		if (requesterName != null) {
			setRequesterName(requesterName);
		}

		String reason = (String)attributes.get("reason");

		if (reason != null) {
			setReason(reason);
		}

		String organization = (String)attributes.get("organization");

		if (organization != null) {
			setOrganization(organization);
		}

		Date dateResponsed = (Date)attributes.get("dateResponsed");

		if (dateResponsed != null) {
			setDateResponsed(dateResponsed);
		}

		String respondText = (String)attributes.get("respondText");

		if (respondText != null) {
			setRespondText(respondText);
		}

		Long responsedByUserId = (Long)attributes.get("responsedByUserId");

		if (responsedByUserId != null) {
			setResponsedByUserId(responsedByUserId);
		}
	}

	@JSON
	@Override
	public long getCopyRequestId() {
		return _copyRequestId;
	}

	@Override
	public void setCopyRequestId(long copyRequestId) {
		_copyRequestId = copyRequestId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public Date getDateCreated() {
		return _dateCreated;
	}

	@Override
	public void setDateCreated(Date dateCreated) {
		_dateCreated = dateCreated;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public long getSuburItemId() {
		return _suburItemId;
	}

	@Override
	public void setSuburItemId(long suburItemId) {
		_suburItemId = suburItemId;
	}

	@JSON
	@Override
	public String getFromEmailAddress() {
		if (_fromEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _fromEmailAddress;
		}
	}

	@Override
	public void setFromEmailAddress(String fromEmailAddress) {
		_fromEmailAddress = fromEmailAddress;
	}

	@JSON
	@Override
	public String getRequesterName() {
		if (_requesterName == null) {
			return StringPool.BLANK;
		}
		else {
			return _requesterName;
		}
	}

	@Override
	public void setRequesterName(String requesterName) {
		_requesterName = requesterName;
	}

	@JSON
	@Override
	public String getReason() {
		if (_reason == null) {
			return StringPool.BLANK;
		}
		else {
			return _reason;
		}
	}

	@Override
	public void setReason(String reason) {
		_reason = reason;
	}

	@JSON
	@Override
	public String getOrganization() {
		if (_organization == null) {
			return StringPool.BLANK;
		}
		else {
			return _organization;
		}
	}

	@Override
	public void setOrganization(String organization) {
		_organization = organization;
	}

	@JSON
	@Override
	public Date getDateResponsed() {
		return _dateResponsed;
	}

	@Override
	public void setDateResponsed(Date dateResponsed) {
		_dateResponsed = dateResponsed;
	}

	@JSON
	@Override
	public String getRespondText() {
		if (_respondText == null) {
			return StringPool.BLANK;
		}
		else {
			return _respondText;
		}
	}

	@Override
	public void setRespondText(String respondText) {
		_respondText = respondText;
	}

	@JSON
	@Override
	public long getResponsedByUserId() {
		return _responsedByUserId;
	}

	@Override
	public void setResponsedByUserId(long responsedByUserId) {
		_responsedByUserId = responsedByUserId;
	}

	@Override
	public String getResponsedByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getResponsedByUserId(), "uuid",
			_responsedByUserUuid);
	}

	@Override
	public void setResponsedByUserUuid(String responsedByUserUuid) {
		_responsedByUserUuid = responsedByUserUuid;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CopyRequest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CopyRequest toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CopyRequest)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CopyRequestImpl copyRequestImpl = new CopyRequestImpl();

		copyRequestImpl.setCopyRequestId(getCopyRequestId());
		copyRequestImpl.setCompanyId(getCompanyId());
		copyRequestImpl.setGroupId(getGroupId());
		copyRequestImpl.setDateCreated(getDateCreated());
		copyRequestImpl.setStatus(getStatus());
		copyRequestImpl.setSuburItemId(getSuburItemId());
		copyRequestImpl.setFromEmailAddress(getFromEmailAddress());
		copyRequestImpl.setRequesterName(getRequesterName());
		copyRequestImpl.setReason(getReason());
		copyRequestImpl.setOrganization(getOrganization());
		copyRequestImpl.setDateResponsed(getDateResponsed());
		copyRequestImpl.setRespondText(getRespondText());
		copyRequestImpl.setResponsedByUserId(getResponsedByUserId());

		copyRequestImpl.resetOriginalValues();

		return copyRequestImpl;
	}

	@Override
	public int compareTo(CopyRequest copyRequest) {
		long primaryKey = copyRequest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CopyRequest)) {
			return false;
		}

		CopyRequest copyRequest = (CopyRequest)obj;

		long primaryKey = copyRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CopyRequestModelImpl copyRequestModelImpl = this;

		copyRequestModelImpl._originalCompanyId = copyRequestModelImpl._companyId;

		copyRequestModelImpl._setOriginalCompanyId = false;

		copyRequestModelImpl._originalGroupId = copyRequestModelImpl._groupId;

		copyRequestModelImpl._setOriginalGroupId = false;

		copyRequestModelImpl._originalStatus = copyRequestModelImpl._status;

		copyRequestModelImpl._setOriginalStatus = false;

		copyRequestModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CopyRequest> toCacheModel() {
		CopyRequestCacheModel copyRequestCacheModel = new CopyRequestCacheModel();

		copyRequestCacheModel.copyRequestId = getCopyRequestId();

		copyRequestCacheModel.companyId = getCompanyId();

		copyRequestCacheModel.groupId = getGroupId();

		Date dateCreated = getDateCreated();

		if (dateCreated != null) {
			copyRequestCacheModel.dateCreated = dateCreated.getTime();
		}
		else {
			copyRequestCacheModel.dateCreated = Long.MIN_VALUE;
		}

		copyRequestCacheModel.status = getStatus();

		copyRequestCacheModel.suburItemId = getSuburItemId();

		copyRequestCacheModel.fromEmailAddress = getFromEmailAddress();

		String fromEmailAddress = copyRequestCacheModel.fromEmailAddress;

		if ((fromEmailAddress != null) && (fromEmailAddress.length() == 0)) {
			copyRequestCacheModel.fromEmailAddress = null;
		}

		copyRequestCacheModel.requesterName = getRequesterName();

		String requesterName = copyRequestCacheModel.requesterName;

		if ((requesterName != null) && (requesterName.length() == 0)) {
			copyRequestCacheModel.requesterName = null;
		}

		copyRequestCacheModel.reason = getReason();

		String reason = copyRequestCacheModel.reason;

		if ((reason != null) && (reason.length() == 0)) {
			copyRequestCacheModel.reason = null;
		}

		copyRequestCacheModel.organization = getOrganization();

		String organization = copyRequestCacheModel.organization;

		if ((organization != null) && (organization.length() == 0)) {
			copyRequestCacheModel.organization = null;
		}

		Date dateResponsed = getDateResponsed();

		if (dateResponsed != null) {
			copyRequestCacheModel.dateResponsed = dateResponsed.getTime();
		}
		else {
			copyRequestCacheModel.dateResponsed = Long.MIN_VALUE;
		}

		copyRequestCacheModel.respondText = getRespondText();

		String respondText = copyRequestCacheModel.respondText;

		if ((respondText != null) && (respondText.length() == 0)) {
			copyRequestCacheModel.respondText = null;
		}

		copyRequestCacheModel.responsedByUserId = getResponsedByUserId();

		return copyRequestCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{copyRequestId=");
		sb.append(getCopyRequestId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", dateCreated=");
		sb.append(getDateCreated());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", suburItemId=");
		sb.append(getSuburItemId());
		sb.append(", fromEmailAddress=");
		sb.append(getFromEmailAddress());
		sb.append(", requesterName=");
		sb.append(getRequesterName());
		sb.append(", reason=");
		sb.append(getReason());
		sb.append(", organization=");
		sb.append(getOrganization());
		sb.append(", dateResponsed=");
		sb.append(getDateResponsed());
		sb.append(", respondText=");
		sb.append(getRespondText());
		sb.append(", responsedByUserId=");
		sb.append(getResponsedByUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.idetronic.subur.model.CopyRequest");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>copyRequestId</column-name><column-value><![CDATA[");
		sb.append(getCopyRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateCreated</column-name><column-value><![CDATA[");
		sb.append(getDateCreated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>suburItemId</column-name><column-value><![CDATA[");
		sb.append(getSuburItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getFromEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requesterName</column-name><column-value><![CDATA[");
		sb.append(getRequesterName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reason</column-name><column-value><![CDATA[");
		sb.append(getReason());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organization</column-name><column-value><![CDATA[");
		sb.append(getOrganization());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateResponsed</column-name><column-value><![CDATA[");
		sb.append(getDateResponsed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>respondText</column-name><column-value><![CDATA[");
		sb.append(getRespondText());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responsedByUserId</column-name><column-value><![CDATA[");
		sb.append(getResponsedByUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CopyRequest.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CopyRequest.class
		};
	private long _copyRequestId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private Date _dateCreated;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _suburItemId;
	private String _fromEmailAddress;
	private String _requesterName;
	private String _reason;
	private String _organization;
	private Date _dateResponsed;
	private String _respondText;
	private long _responsedByUserId;
	private String _responsedByUserUuid;
	private long _columnBitmask;
	private CopyRequest _escapedModel;
}