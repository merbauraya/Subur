/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.subur.model.impl;

import com.idetronic.subur.model.ItemFileEntry;
import com.idetronic.subur.model.ItemFileEntryModel;
import com.idetronic.subur.model.ItemFileEntrySoap;
import com.idetronic.subur.service.persistence.ItemFileEntryPK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ItemFileEntry service. Represents a row in the &quot;Subur_ItemFileEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.idetronic.subur.model.ItemFileEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ItemFileEntryImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see ItemFileEntryImpl
 * @see com.idetronic.subur.model.ItemFileEntry
 * @see com.idetronic.subur.model.ItemFileEntryModel
 * @generated
 */
@JSON(strict = true)
public class ItemFileEntryModelImpl extends BaseModelImpl<ItemFileEntry>
	implements ItemFileEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a item file entry model instance should use the {@link com.idetronic.subur.model.ItemFileEntry} interface instead.
	 */
	public static final String TABLE_NAME = "Subur_ItemFileEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "itemId", Types.BIGINT },
			{ "fileEntryId", Types.BIGINT },
			{ "entryType", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Subur_ItemFileEntry (itemId LONG not null,fileEntryId LONG not null,entryType LONG,primary key (itemId, fileEntryId))";
	public static final String TABLE_SQL_DROP = "drop table Subur_ItemFileEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY itemFileEntry.id.itemId ASC, itemFileEntry.id.fileEntryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Subur_ItemFileEntry.itemId ASC, Subur_ItemFileEntry.fileEntryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.idetronic.subur.model.ItemFileEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.idetronic.subur.model.ItemFileEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.idetronic.subur.model.ItemFileEntry"),
			true);
	public static long ITEMID_COLUMN_BITMASK = 1L;
	public static long FILEENTRYID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ItemFileEntry toModel(ItemFileEntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ItemFileEntry model = new ItemFileEntryImpl();

		model.setItemId(soapModel.getItemId());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setEntryType(soapModel.getEntryType());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ItemFileEntry> toModels(ItemFileEntrySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ItemFileEntry> models = new ArrayList<ItemFileEntry>(soapModels.length);

		for (ItemFileEntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.idetronic.subur.model.ItemFileEntry"));

	public ItemFileEntryModelImpl() {
	}

	@Override
	public ItemFileEntryPK getPrimaryKey() {
		return new ItemFileEntryPK(_itemId, _fileEntryId);
	}

	@Override
	public void setPrimaryKey(ItemFileEntryPK primaryKey) {
		setItemId(primaryKey.itemId);
		setFileEntryId(primaryKey.fileEntryId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ItemFileEntryPK(_itemId, _fileEntryId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ItemFileEntryPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ItemFileEntry.class;
	}

	@Override
	public String getModelClassName() {
		return ItemFileEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemId", getItemId());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("entryType", getEntryType());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long itemId = (Long)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Long entryType = (Long)attributes.get("entryType");

		if (entryType != null) {
			setEntryType(entryType);
		}
	}

	@JSON
	@Override
	public long getItemId() {
		return _itemId;
	}

	@Override
	public void setItemId(long itemId) {
		_columnBitmask |= ITEMID_COLUMN_BITMASK;

		if (!_setOriginalItemId) {
			_setOriginalItemId = true;

			_originalItemId = _itemId;
		}

		_itemId = itemId;
	}

	public long getOriginalItemId() {
		return _originalItemId;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@JSON
	@Override
	public long getEntryType() {
		return _entryType;
	}

	@Override
	public void setEntryType(long entryType) {
		_entryType = entryType;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ItemFileEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ItemFileEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ItemFileEntryImpl itemFileEntryImpl = new ItemFileEntryImpl();

		itemFileEntryImpl.setItemId(getItemId());
		itemFileEntryImpl.setFileEntryId(getFileEntryId());
		itemFileEntryImpl.setEntryType(getEntryType());

		itemFileEntryImpl.resetOriginalValues();

		return itemFileEntryImpl;
	}

	@Override
	public int compareTo(ItemFileEntry itemFileEntry) {
		ItemFileEntryPK primaryKey = itemFileEntry.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ItemFileEntry)) {
			return false;
		}

		ItemFileEntry itemFileEntry = (ItemFileEntry)obj;

		ItemFileEntryPK primaryKey = itemFileEntry.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ItemFileEntryModelImpl itemFileEntryModelImpl = this;

		itemFileEntryModelImpl._originalItemId = itemFileEntryModelImpl._itemId;

		itemFileEntryModelImpl._setOriginalItemId = false;

		itemFileEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ItemFileEntry> toCacheModel() {
		ItemFileEntryCacheModel itemFileEntryCacheModel = new ItemFileEntryCacheModel();

		itemFileEntryCacheModel.itemId = getItemId();

		itemFileEntryCacheModel.fileEntryId = getFileEntryId();

		itemFileEntryCacheModel.entryType = getEntryType();

		return itemFileEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{itemId=");
		sb.append(getItemId());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", entryType=");
		sb.append(getEntryType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.idetronic.subur.model.ItemFileEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entryType</column-name><column-value><![CDATA[");
		sb.append(getEntryType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ItemFileEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ItemFileEntry.class
		};
	private long _itemId;
	private long _originalItemId;
	private boolean _setOriginalItemId;
	private long _fileEntryId;
	private long _entryType;
	private long _columnBitmask;
	private ItemFileEntry _escapedModel;
}